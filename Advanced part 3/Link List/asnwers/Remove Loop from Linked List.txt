/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode solve(ListNode A) {
        if(A==null){
            return null;
        }
        ListNode s = A;
        ListNode f = A;
        ListNode f1 = A;
        boolean cycle = false;

        while(f!=null && s!=null){
            s = s.next;
            f = f.next.next;
            if (s==f){
                cycle = true;
                break;
            }
        }
        if(cycle==false){
            return null;
        }
        
        ListNode s1=A;
        ListNode s2=s;
        while(s2!=s1){
            s1=s1.next;
            s2=s2.next;
        }
        //to break the loop and make the last node as null
        ListNode temp=s1;
        while(temp.next!=s1){
            temp=temp.next;
        }
        temp.next=null;
        //after that need to return the head of the ListNode
        return A;

    }
}
