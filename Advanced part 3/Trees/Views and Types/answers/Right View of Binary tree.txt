/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode A) {


        ArrayList<Integer> ans = new ArrayList<>();
        int j = 0;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(A);
        while(!queue.isEmpty()){
            int size = queue.size();
            for (int i=0; i<size; i++){
                TreeNode temp = queue.poll();
                if (i == size -1){
                    ans.add(temp.val);
                }
                if(temp.left!=null){
                    queue.add(temp.left);
                }
                if(temp.right!=null){
                    queue.add(temp.right);
                }
            }
        }

        return ans;
    }
}
