/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> zigzagLevelOrder(TreeNode A) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        Deque<TreeNode> dq = new ArrayDeque<>();
        dq.add(A);
        int count = 0;
        while(!dq.isEmpty()){
            ArrayList<Integer> row = new ArrayList<>();
            int size = dq.size();
            for(int i = 0; i<size; i++){
                if(count%2==0){
                    TreeNode t = dq.removeFirst();
                    if(t.left!=null){
                        dq.add(t.left);
                    }
                    if(t.right!=null){
                        dq.add(t.right);
                    }
                    row.add(t.val);
                } else {
                    TreeNode t = dq.removeLast();
                    if(t.right!=null){
                        dq.addFirst(t.right);
                    }
                    if(t.left!=null){
                        dq.addFirst(t.left);
                    }
                    row.add(t.val);
                }
            }
            result.add(row);
            count+=1;
        }
        return result;
    }
}
