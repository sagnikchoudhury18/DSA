/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> solve(TreeNode A) {
        ArrayList<Integer> ans=new ArrayList<>();
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(A);
        while(!queue.isEmpty()){
            int len=queue.size();
            for(int i=0;i<len;i++){
                TreeNode poll=queue.poll();
                ans.add(poll.val);
                if(poll.left!=null)
                    queue.add(poll.left);
                else if(poll.val!=-1)
                    queue.add(new TreeNode(-1));
                if(poll.right!=null)
                    queue.add(poll.right);
                else if(poll.val!=-1)
                    queue.add(new TreeNode(-1));
            }
        }
        return ans;
    }
}
