public class Solution {
    public int[] solve(int[] A) {
        mergeSort(A,0,A.length-1);
        return A;
    }

    public void mergeSort(int[] A, int start,int end){
        
        if(start>=end){
            return;
        } 
        
        int mid = (start+end)/2;
        mergeSort(A,start,mid);
        mergeSort(A,mid+1,end);
        merge(A,start,mid,end);
        
    }

    public void merge(int[] A, int start, int mid, int end){
         int p1=start, p2=mid+1, p3=0;
         int[] temp = new int[end-start+1];

        while(p1<=mid && p2<=end){
            if(A[p1]<=A[p2]){
                temp[p3] = A[p1];
                p1++;
                p3++;
            } else {
                temp[p3] = A[p2];
                p2++;
                p3++;
            }
        }
        while(p1<=mid){
            temp[p3]=A[p1];
            p1++;
            p3++;
        }
        while(p2<=end){
            temp[p3]=A[p2];
            p2++;
            p3++;
        }

        for(int i=start; i<=end; i++){
            A[i] = temp[i-start];
        }
    }
}
