/* Cases

1. Only 1 ele present
2. Peak ele at 0th or last pos
3. search from 1st to n-2th pos and check for a max ele in betw

*/


public class Solution {
    public int solve(int[] A) {
        int n = A.length;
        if (n == 1) {
            return A[0];
        }
        if (A[0] >= A[1]) {
            return A[0];
        }
        if (A[n - 1] >= A[n - 2]) {
            return A[n - 1];
        }
        int low = 1, high = n - 2;
        while (low <= high) {
            int mid = (low + high) / 2;
            if ((A[mid] > A[mid - 1]) && (A[mid] > A[mid + 1])) {
                return A[mid];
            } else if (A[mid - 1] >= A[mid] && A[mid] > A[mid + 1])
                high = mid - 1;
            else
                low = mid + 1;
        }
        return -1;
    }
}
