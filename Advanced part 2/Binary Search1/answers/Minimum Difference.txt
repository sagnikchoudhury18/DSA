public class Solution {
    public int solve(int A, int B, int[][] C) {
        for (int i = 0; i < A; i++) {
            Arrays.sort(C[i]); // Sort each row of matrix
        }
        int ans = 1000000000; 
        for (int i=0; i<A-1; i++){
            for(int j=0; j<B; j++){
                int pos = findSmallestDiff(C[i+1], C[i][j]);
                ans = Math.min(ans, Math.abs(C[i][j] - C[i + 1][pos])); // Update answer
                if (pos != 0) {
                    ans = Math.min(ans, Math.abs(C[i][j] - C[i + 1][pos - 1]));
                }
               
            }
        }
        return ans;
    }

    public int findSmallestDiff(int[] C, int t){
        //find B
        int l = 0, h = C.length-1, pos=-1, mid=-1;
        while(l<=h){
            mid = l + (h-l)/2;
            //if match is found
            if(C[mid] == t){
                pos = mid;
                break;
            }
            else if (C[mid]<t){
                pos = mid;
                l=mid+1;
            }
            else if(C[mid]>t){
                pos = mid;
                h=mid-1;
            }
        //System.out.println("Min diff pos: "+ pos);
    }
        return Math.abs(pos);
    }
}
