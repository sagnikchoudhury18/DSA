public class Solution {
    ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
    public ArrayList<ArrayList<Integer>> permute(ArrayList<Integer> A) {
        boolean visited[] = new boolean[A.size()];
        for(int i=0; i<A.size(); i++){
            visited[i] = false;
        }
        generatePermutations(A, 0, visited, new ArrayList<>());
        return ans;
    }

    public void generatePermutations(ArrayList<Integer> A, int idx, boolean[] visited,  ArrayList<Integer> res) {
        if(idx==A.size()){
            ans.add(new ArrayList<>(res));
            return;
        }

        for(int i=0; i<A.size(); i++){
            if(visited[i]==false){
                res.add(A.get(i));
                visited[i] = true;

                generatePermutations(A, idx+1, visited, res);
                res.remove(res.size()-1);
                visited[i] = false;
            }
        }
    }
}
