/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> insert(ArrayList<Interval> intervals, Interval newInterval) {
        ArrayList<Interval> ans = new ArrayList<>();
        for(int i=0; i <intervals.size(); i++){
            Interval curr = intervals.get(i);
            if(curr.end<newInterval.start){
                ans.add(curr);
            } else if(curr.start>newInterval.end){
                ans.add(newInterval);
                for(int j=i; j<intervals.size(); j++){
                    ans.add(intervals.get(j));
                }
                return ans;
            } else {
                newInterval.start = Math.min(newInterval.start, curr.start);
                newInterval.end = Math.max(newInterval.end, curr.end);
            }
        }
        ans.add(newInterval);
        return ans;

    }
}
